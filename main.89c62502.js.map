{"version":3,"sources":["scripts/main.js"],"names":["thead","document","querySelector","toNumber","str","replace","sortTable","columnIndex","table","tbody","rows","querySelectorAll","sort","rowA","rowB","cellA","cells","textContent","cellB","includes","localeCompare","firstChild","removeChild","forEach","row","appendChild","addEventListener","evnt","target","tagName","cellIndex"],"mappings":";AAAA,aAwCC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAtCD,IAAMA,EAAQC,SAASC,cAAc,SAWrC,SAASC,EAASC,GACT,OAACA,EAAIC,QAAQ,QAAS,IAG/B,SAASC,EAAUC,GACXC,IACAC,EADQR,SAASC,cAAc,SACjBA,cAAc,SAC5BQ,EAAWD,EAAAA,EAAME,iBAAiB,OAajCF,IAXPC,EAAKE,KAAK,SAACC,EAAMC,GACTC,IAAAA,EAAQF,EAAKG,MAAMT,GAAaU,YAChCC,EAAQJ,EAAKE,MAAMT,GAAaU,YAElCF,OAAAA,EAAMI,SAAS,KACVhB,EAASY,GAASZ,EAASe,GAE3BH,EAAMK,cAAcF,KAIxBT,EAAMY,YACXZ,EAAMa,YAAYb,EAAMY,YAG1BX,EAAKa,QAAQ,SAACC,GACZf,EAAMgB,YAAYD,KAlCtBxB,EAAM0B,iBAAiB,QAAS,SAACC,GACH,OAAxBA,EAAKC,OAAOC,SAIdvB,EAHmBqB,EAAKC,OACOE","file":"main.89c62502.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst thead = document.querySelector('thead');\n\nthead.addEventListener('click', (evnt) => {\n  if (evnt.target.tagName === 'TH') {\n    const headerCell = evnt.target;\n    const columnIndex = headerCell.cellIndex;\n\n    sortTable(columnIndex);\n  }\n});\n\nfunction toNumber(str) {\n  return +str.replace(/[$,]/g, '');\n}\n\nfunction sortTable(columnIndex) {\n  const table = document.querySelector('table');\n  const tbody = table.querySelector('tbody');\n  const rows = [...tbody.querySelectorAll('tr')];\n\n  rows.sort((rowA, rowB) => {\n    const cellA = rowA.cells[columnIndex].textContent;\n    const cellB = rowB.cells[columnIndex].textContent;\n\n    if (cellA.includes('$')) {\n      return toNumber(cellA) - toNumber(cellB);\n    } else {\n      return cellA.localeCompare(cellB);\n    }\n  });\n\n  while (tbody.firstChild) {\n    tbody.removeChild(tbody.firstChild);\n  }\n\n  rows.forEach((row) => {\n    tbody.appendChild(row);\n  });\n}\n"]}